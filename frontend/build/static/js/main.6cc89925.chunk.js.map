{"version":3,"sources":["hoc/Aux/Aux.js","components/TestItems/TestItem/TestItem.js","components/TestItems/TestItems.js","components/TestExecutionTable/TestExecutionTable.js","axios-api.js","components/TestItemDetails/TestItemDetails.js","components/AddNewRequest/AddNewRequest.js","components/UploadNewFile/UploadNewFile.js","containers/IONOSTestExecutor/IONOSTestExecutor.js","App.js","serviceWorker.js","index.js"],"names":["aux","props","children","TestItem","className","this","status","ID","requestedBy","createdAt","env_name","path","href","onClick","click","Component","items","map","item","key","id","created_at","requested_by","displayPath","clicked","bind","TestExecutionTable","tests","TestItems","viewItemDetails","instance","axios","create","baseURL","TestItemDetails","currentItem","Aux","backClicked","logs","AddNewRequest","type","name","placeholder","value","requester","onChange","requesterChanged","requesterError","env","envChanged","defaultValue","assets","test_envs","envError","multiple","testPath","testPathChanged","available_paths","testPathError","disabled","submitTest","UploadNewFile","state","fileInput","selectedFile","error","success","onInputChange","event","setState","file","target","files","split","pop","onUploadFile","formData","FormData","append","post","then","response","data","message","timer","setTimeout","window","location","reload","clearTimeout","catch","data-testid","IONOSTestExecutor","detailsView","itemID","interval","getDisplayPath","val","some","i","refreshList","get","itemId","backToListItems","handleTestPathChanged","e","options","l","length","selected","push","setInterval","clearInterval","toString","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.6cc89925.chunk.js","sourcesContent":["const aux = (props) => props.children;\nexport default aux;","import React, {Component}  from 'react';\n\nclass TestItem extends Component {\n\n  render(){\n     let className = \"failed\";\n     if (this.props.status === \"SUCCESS\") {\n         className = 'succeed'\n     } else if (this.props.status === \"RUNNING\" || this.props.status === \"CREATED\") {\n         className = 'running'\n     }\n    return (\n        <tr className={className}>\n            <td>{this.props.ID}</td>\n            <td>{this.props.requestedBy}</td>\n            <td>{this.props.createdAt}</td>\n            <td>{this.props.env_name}</td>\n            <td>{this.props.path}</td>\n            <td>{this.props.status}</td>\n            <td><a href=\"#\" onClick={this.props.click}>View Details</a></td>\n        </tr>\n    );\n  }\n}\n\nexport default TestItem;","import React from 'react';\nimport TestItem from './TestItem/TestItem';\n\nconst items = (props) => (\n  props.items.map((item) => {\n    return (\n        <TestItem\n            key={item.id}\n            ID={item.id}\n            createdAt={item.created_at}\n            env_name={item.env_name}\n            requestedBy={item.requested_by}\n            status={item.status}\n            path={item.displayPath}\n            click={props.clicked.bind(this, item.id)}\n        />\n    );\n  })\n);\n\nexport default items;","import React, {Component}  from 'react';\nimport TestItems from \"../TestItems/TestItems\";\n\nclass TestExecutionTable extends Component {\n\n  render(){\n     const tests = <TestItems items={this.props.items} clicked={this.props.viewItemDetails}/>\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n              <fieldset>\n                <legend>Test execution requests</legend>\n                <div className=\"table-responsive\">\n                  <table className=\"table table-striped\">\n                    <thead>\n                    <tr>\n                      <th>Request ID</th>\n                      <th>Requested By</th>\n                      <th>Created At</th>\n                      <th>Test Env</th>\n                      <th>Test Path</th>\n                      <th>Status</th>\n                      <th>Details</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {tests}\n                    </tbody>\n                  </table>\n                </div>\n              </fieldset>\n            </div>\n          </div>\n    );\n  }\n}\n\nexport default TestExecutionTable;","import axios from 'axios'\n\nconst instance = axios.create({\n  baseURL: 'http://127.0.0.1:8081/api/v1/',\n});\n\nexport default instance;\n","import React, {Component}  from 'react';\nimport Aux from \"../../hoc/Aux/Aux\";\n\nclass TestItemDetails extends Component {\n\n\n  render(){\n      let className = \"failed\";\n     if (this.props.currentItem.status === \"SUCCESS\") {\n         className = 'succeed'\n     } else if (this.props.currentItem.status === \"RUNNING\" || this.props.currentItem.status === \"CREATED\") {\n         className = 'running'\n     }\n    return (\n        <Aux>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <a className=\"btn btn-primary float-right\" href=\"#\" onClick={this.props.backClicked.bind(this)}>Back</a>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <fieldset>\n                  <legend>Test details</legend>\n                  <div className=\"table-responsive\">\n                    <table className=\"table table-striped\">\n                      <tbody>\n                      <tr>\n                        <td className=\"title\">ID</td>\n                        <td>{this.props.currentItem.id}</td>\n                      </tr>\n                      <tr>\n                        <td className=\"title\">Requested by</td>\n                        <td>{this.props.currentItem.requested_by}</td>\n                      </tr>\n                      <tr>\n                        <td className=\"title\">Env</td>\n                        <td>{this.props.currentItem.env_name}</td>\n                      </tr>\n                      <tr>\n                        <td className=\"title\">Path</td>\n                        <td>{this.props.currentItem.displayPath}</td>\n                      </tr>\n                      <tr className={className}>\n                        <td className=\"title\">Status</td>\n                        <td>{this.props.currentItem.status}</td>\n                      </tr>\n                      <tr>\n                        <td className=\"title\">Logs</td>\n                        <td>\n                    <pre><code className=\"python\">\n                      {this.props.currentItem.logs}\n                      </code></pre>\n                        </td>\n                      </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </fieldset>\n              </div>\n            </div>\n        </Aux>\n    );\n  }\n}\n\nexport default TestItemDetails;","import React, {Component}  from 'react';\n\nclass AddNewRequest extends Component {\n\n  render(){\n\n    return (\n        <div className=\"row\">\n           \n            <div className=\"col-md-12\">\n              <fieldset>\n                <legend>New request</legend>\n                <form>\n                  <div className=\"row\">\n                    <div className=\"col-md-3 form-group\">\n                      <input type=\"text\" className=\"form-control\" name=\"requester\" id=\"requester\"\n                             placeholder=\"Requester\" value={this.props.requester} onChange={this.props.requesterChanged.bind(this)}/>\n                             <p className=\"error-message\">{this.props.requesterError}</p>\n                    </div>\n                    <div className=\"col-md-3 form-group\">\n                      <select className=\"form-control\" name=\"env_id\" id=\"env_id\" placeholder=\"Environment ID\"\n                              value={this.props.env}  onChange={this.props.envChanged.bind(this)}>\n                        <option value=\"\" defaultValue></option>\n                        {this.props.assets.test_envs.map(item => <option value={item.id} key={item.id}>{item.name}</option>)}\n                      </select>\n                             <p className=\"error-message\">{this.props.envError}</p>\n                    </div>\n                    <div className=\"col-md-4 form-group\">\n                      <select className=\"form-control\" name=\"test_path\" id=\"test_path\" multiple\n                             placeholder=\"Test Path\" value={this.props.testPath}  onChange={this.props.testPathChanged.bind(this)}>\n                        <option value=\"\" defaultValue></option>\n                        {this.props.assets.available_paths.map(item => <option value={item.id}  key={item.id}>{item.path}</option>)}\n                      </select>\n                             <p className=\"error-message\">{this.props.testPathError}</p>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <input type=\"button\" className=\"btn btn-primary\" value=\"Submit\" disabled={this.props.testPath === '' || this.props.requester === '' ||this.props.env === ''} onClick={this.props.submitTest}/>\n                    </div>\n                  </div>\n                </form>\n              </fieldset>\n            </div>\n          </div>\n    );\n  }\n}\n\nexport default AddNewRequest;","import React, {Component}  from 'react';\nimport axios from './../../axios-api'\nclass UploadNewFile extends Component {\n    state = {\n        fileInput:null,\n        selectedFile : null,\n        error:null,\n        success:null\n    };\n    onInputChange = event => {\n       this.setState({error:null})\n       var file = event.target.files[0];\n\n       if(file){\n            var  extension =  file.name.split('.').pop()\n            if (extension !== 'py'){\n                event.target.value = '';\n                this.setState({error:\"Please select python file!\"})\n            }else{\n\n                this.setState({error:null, selectedFile:file, fileInput:event.target})\n            }\n       }\n\n    }\n    onUploadFile = () =>{\n        this.setState({error:null})\n        var formData =  new FormData()\n        formData.append(\"file\",this.state.selectedFile)\n        axios.post('upload-file', formData).then(response => {\n            this.setState({success: response.data.message})\n            this.state.fileInput.value = \"\"\n             const timer = setTimeout(() => {\n                  window.location.reload()\n                // this.setState({success: null})\n              }, 2000);\n              return () => clearTimeout(timer);\n          }).catch(error => {\n            this.setState({error: \"Fail to upload file !\"})\n          })\n    }\n\n   render(){\n       return(\n        <div className=\"row\">\n            <div className=\"col-12\">\n            <fieldset>\n                <legend>Upload New file Test</legend>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        {this.state.error && <div data-testid=\"alert-danger\" className=\"alert alert-danger\">{this.state.error}</div>}\n                        {this.state.success && <div data-testid=\"alert-success\" className=\"alert alert-success\">{this.state.success}</div>}\n                    </div>\n                    <div className=\"col-6 col-md-6\">\n                        <input type=\"file\" name=\"file\" data-testid=\"input-file\" onChange={this.onInputChange}/>\n                    </div>\n                    <div className=\"col-6 col-md-6 d-flex justify-content-end\">\n                        <input disabled={this.state.error || !this.state.selectedFile} type=\"button\" className=\"btn btn-primary\" value=\"Upload\" id=\"btnupload\"  onClick={this.onUploadFile}/>\n                    </div>\n                </div>\n            </fieldset>\n            </div>\n            \n        </div>\n        \n       )\n   }\n}\nexport default UploadNewFile;","import React, {Component} from 'react';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport TestExecutionTable from './../../components/TestExecutionTable/TestExecutionTable';\n\nimport axios from './../../axios-api'\nimport TestItemDetails from \"../../components/TestItemDetails/TestItemDetails\";\nimport AddNewRequest from \"../../components/AddNewRequest/AddNewRequest\";\nimport UploadNewFile from \"../../components/UploadNewFile/UploadNewFile\"\n\nclass IONOSTestExecutor extends Component {\n  state = {\n    assets: {test_envs: [], available_paths: []},\n    error: false,\n    items: [],\n    detailsView: false,\n    itemID: null,\n    currentItem: {},\n    requesterError: '',\n    envError: '',\n    testPathError: '',\n    requester: '',\n    env: '',\n    testPath: [],\n  };\n\n  interval = null\n\n  componentDidMount () {\n    axios.get('assets').then(response => {\n      this.setState({assets: response.data})\n    }).catch(error => {\n      this.setState({error: true})\n    })\n\n    this.interval = setInterval(this.refreshList, 1000);\n    this.refreshList()\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getDisplayPath = (path) => {\n    let val = '';\n    this.state.assets.available_paths.map(item => {\n      if (path.some(i => i === item.id)) {\n        val += item.path + ' '\n      }\n    })\n    return val;\n  }\n\n  refreshList = () => {\n    axios.get('test-run').then(response => {\n      let data = response.data;\n      this.setState({items: data.map(item => { return {displayPath: this.getDisplayPath(item.path), ...item}})})\n    }).catch(error => {\n      this.setState({error: true})\n    })\n    if (this.state.itemID !== null){\n      this.viewItemDetails(this.state.itemID)\n    }\n  }\n\n  submitTest = () => {\n    axios.post('test-run', {requested_by: this.state.requester, env: this.state.env, path: this.state.testPath}).then(response => {\n      this.setState({requester: '', env: '', testPath: ''})\n        this.refreshList()\n      }).catch(error => {\n        this.setState({\n          requesterError: error.data.requested_by,\n          envError: error.data.env,\n          testPathError: error.data.path,\n        })\n      })\n  }\n\n  viewItemDetails = (itemId) => {\n      axios.get('test-run/' + itemId).then(response => {\n        let data = response.data\n        data.displayPath = this.getDisplayPath(response.data.path)\n        this.setState({currentItem: data})\n      }).catch(error => {\n        this.setState({error: true})\n      })\n    this.setState({\n      detailsView: true,\n      itemID: itemId\n    })\n  };\n\n  backToListItems = () => {\n    this.setState({\n      detailsView: false,\n      itemID: null\n    })\n  };\n\n  handleTestPathChanged = (e) => {\n    let options = e.target.options;\n    let value = [];\n    for (let i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    this.setState({testPath: value});\n  }\n\n  render () {\n    if (this.state.detailsView) {\n      return (\n          <TestItemDetails currentItem={this.state.currentItem} backClicked={this.backToListItems}></TestItemDetails>\n      )\n    }\n    return (\n        <Aux>\n          <UploadNewFile></UploadNewFile>\n          <AddNewRequest\n              requester={this.state.requester}\n              requesterError={this.state.requesterError}\n              env={this.state.env}\n              envError={this.state.envError}\n              testPath={this.state.testPath}\n              testPathError={this.state.testPathError}\n              assets={this.state.assets}\n\n              requesterChanged={e => this.setState({ requester: e.target.value?.toString() })}\n              envChanged={e => this.setState({ env: e.target.value?.toString() })}\n              testPathChanged={this.handleTestPathChanged}\n              submitTest={this.submitTest}\n          ></AddNewRequest>\n          <TestExecutionTable items={this.state.items} viewItemDetails={this.viewItemDetails}></TestExecutionTable>\n      </Aux>\n    )\n  }\n}\n\nexport default IONOSTestExecutor;","import React from 'react';\nimport IONOSTestExecutor from \"./containers/IONOSTestExecutor/IONOSTestExecutor\";\n\nfunction App() {\n  return (\n\n      <div>\n          <IONOSTestExecutor></IONOSTestExecutor>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}